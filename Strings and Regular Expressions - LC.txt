1. Name Details (Q-2268)
Write a query to display the name by combining first_name and last_name separated with a space, city, state, phone_number and email of all Contact details which  belongs to the state 'Karnataka'. Give an alias name for name as 'full_name'. Display the records in ascending order based on their 'city' and then by 'full_name'. Note: use CONCAT().

select concat(concat(first_name, ' '),last_name) as full_name, city, state, phone_number, email
from contact
where state = 'Karnataka'
order by city asc, full_name asc;

2. Customer Details (Q-2269)
Write a query to display the customer id and customer notes of the customers which contains a word 'Recruit' in their customer notes. Display the records in ascending order based on their customer id. 

select id, notes 
from customer
where notes like '%Recruit%'
order by id asc;

3. User Details (Q-2270)
Write a query to display the username, password in HEX format with alias name as 'encrypted_password', lastlogin_time and failed_attempts of the user details. Display the records in ascending order based on their username. Note:Use RAWTOHEX().

select 
username,
rawtohex(user_password) as encrypted_password,
lastlogin_time,
failed_attempts
from user_details
order by username asc;

4. Password Generation (Q-2271)
Write a query to display the username, password in HEX format with an alias name as 'encrypted_password', lastlogin_time and failed_attempts of all  the users where the  length of their encrypted_password is more than 15. Display the records in ascending order based on their username. Note: Use RAWTOHEX() and length().

select 
username,
rawtohex(user_password) as encrypted_password,
lastlogin_time,
failed_attempts
from user_details
where length(rawtohex(user_password)) > 15
order by username asc;

5. Modified Number (Q-2272)
Write a query to display the card number of credit card in 20 characters by right padding with '#', sort the card number in ascending order. Give an alias name for the card number as 'modified_number'. Note: Use rpad().

select rpad(card_number, 20, '#') as modified_number
from credit_card
order by card_number asc;

6. Transaction ID Modification(Q-2273)
Write a query to display the transaction id of payment authorization in 30 characters by left padding with '#', sort by the transaction id in ascending order. Give an alias name for the transaction id as 'modified_id'. Note:Use lpad(). 

select lpad(transaction_id, 30,'#') as modified_id
from payment_authorization
order by transaction_id asc;

7. User Name Modification (Q-2274)
Write a query to display user names. If the user name contains the letter 'a' in it, then substitute the letter 'a' with '*'. Give an alias name for the user names as 'modified_name'. Display the records sorted by modified_name in ascending order. Example in the question should be "(Eg : If name is "Nitin Madane" replace 'a' with '*' as Nitin M*d*ne).". Note:Use replace().

select replace(username,'a','*') as modified_name 
from user_details
order by modified_name asc;

8. Currency Code Modification (Q-2275)
Write a query to display the first two positions in each currency code. Give an alias name for the currency code as 'modified_code'. Display the records sorted by modified_code in ascending order.  Note: use substr().

select substr(code, 1, 2) as modified_code
from currency
order by modified_code asc;

8. Contact Details (Q-2276)
Write a query to display the firstname, city, state and phone_number in (XXX-XXX-XXXX) format of all the contact details whose phone number is of length 10. Give an alias name as 'phone_number' for the given format. Display the records in ascending order based on their first_name. Note use REGEXP_REPLACE().

select first_name, city, state,
regexp_replace(phone_number, '(^[[:digit:]]{3})([[:digit:]]{3})([[:digit:]]{4}$)','\1-\2-\3') as phone_number
from contact
where length(phone_number) = 10
order by first_name asc;

9. Contact Details Based On Name(Q-2277)
Write a query to display the first_name, city, state and phone_number of all contacts having 5th digit of their phonenumber as '5'. Display the records in ascending order based on their first_name. Note:Use REGEXP_SUBSTR(). 

select first_name, city, state, phone_number
from contact
where regexp_substr(phone_number, '\d', 1, 5) = 5
order by first_name asc;

10. Email Modification (Q-2278)
Write a query to display the emailid from the contact details and replace the emailid's having values like 'yahoo.com' to 'yahoo.co.in'. Give alias name as 'modified_email'. Display the records in ascending order based on the email. Note: Use REGEXP_REPLACE().'

select email, 
regexp_replace(email, 'yahoo.com', 'yahoo.co.in')
as modified_email
from contact
order by email asc;

11. Contact Details Based On City(Q-2279)
Write a query to display all the cities from the contact details. Wherever the city is 'Bangalore', replace it with 'Bengaluru'. Give an  alias name as 'City_name'. Display the records in ascending order based on the name. Note: Use replace().

select replace(city, 'Bangalore', 'Bengaluru') as City_name
from contact
order by City_name asc;

12. First Name Details (Q-2280)
Write a query to display the first_name of contact details having length as 5 or less than 5. Display the records in ascending order based on the first_name. Note:Use length(). 

select first_name
from contact
where length(first_name) <= 5
order by first_name asc;

13. Customer Invoice Status (Q-2281)
Write a query to display the customer notes(notes in customer table) and invoice status separated with a hyphen and give alias name as 'Customer_Invoice_Status'. Display the records in ascending order based on their Customer_Invoice_Status. Note: use CONCAT().

select concat(concat(c.notes, '-'),i.status) as Customer_Invoice_Status
from customer c join
invoice i on
i.customer_id = c.id
order by 1 asc;

14. Contact Details Based On Organisation(Q-2282)
Write a query to display the first three characters of org_name from contact details. Give alias name as 'org_code'. Display the record in ascending order based on org_code. Note: use substr(). 

select substr(org_name, 1, 3) as org_code
from contact
order by 1 asc;